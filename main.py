import asyncio

from initialization import dp
from aiogram import types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, \
     ReplyKeyboardRemove, InputFile

from quiz import questions_handler, question_engine, test_end_handler, reset_quiz
from topics_handlers import basic_concepts_handler, technologies_handler, examples_handler, send_topic_info
from database import get_topic_by_number, get_random_topic_from_table, get_all_topics_from_table, like, dislike

answered_questions = 0
right_answered_questions = 0

global_topic_num = 1
global_table_name = ""
prev_message = ""
questions_list = []


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.answer(f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.first_name}! –ú–µ–Ω–µ –∑–≤–∞—Ç–∏ Smarty, —ñ —è - —Ç–≤—ñ–π –ø–æ–º—ñ—á–Ω–∏–∫ —É —Å–≤—ñ—Ç—ñ "
                         f"—Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç üòä. –î–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –¥—ñ–π –≤–∏–∫–ª–∏–∫–∞–π /help")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    help_text = (f"–¢—É—Ç –¥–ª—è —Ç–µ–±–µ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, —è–∫—ñ –¥–æ–ø–æ–º–æ–∂—É—Ç—å —Ç–æ–±—ñ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —è–∫ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –±–æ—Ç–æ–º:\n"
                 f"/air - –î–æ–ø–æ–º–æ–∂–µ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —è–∫—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è üò∂‚Äçüå´Ô∏è –æ–Ω-–ª–∞–π–Ω —É —Ç–≤–æ—î–º—É –º—ñ—Å—Ç—ñ/—Ä–µ–≥—ñ–æ–Ω—ñ\n"
                 f"/water - –î–æ–ø–æ–º–æ–∂–µ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —è–∫—ñ—Å—Ç—å –≤–æ–¥–∏ üíß –æ–Ω-–ª–∞–π–Ω —É —Ç–≤–æ—î–º—É –º—ñ—Å—Ç—ñ/—Ä–µ–≥—ñ–æ–Ω—ñ\n"
                 f"/gov - –î—ñ–∑–Ω–∞–π—Å—è –ø—Ä–æ –î—ñ—é —ñ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ñ –ø–µ—Ç–∏—Ü—ñ—ó –≤ –£–∫—Ä–∞—ó–Ω—ñ –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑‚ùóÔ∏è\n"
                 f"/car_chargers - –Ø–∫—â–æ —Ç–æ–±—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–∞—Ä—è–¥–∏—Ç–∏ –µ–ª–µ–∫—Ç—Ä–æ–º–æ–±—ñ–ª—å - –∑–≤–µ—Ä—Ç–∞–π—Å—è –¥–æ –º–µ–Ω–µüòá\n"
                 f"/quiz - –ü–µ—Ä–µ–≤—ñ—Ä —Å–≤–æ—ó –∑–Ω–∞–Ω–Ω—è –∑ —Ç–µ–º–∏ '–†–æ–∑—É–º–Ω—ñ –º—ñ—Å—Ç–∞' –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑üòé\n"
                 f"/activities - –î—ñ–∑–Ω–∞–π—Å—è –Ω–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ä–æ–∑—É–º–Ω—ñ –º—ñ—Å—Ç–∞ ‚ÑπÔ∏è\n"
                 f"\nP.S: –¶—ñ–∫–∞–≤–æ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤? –ö–ª–∞—Ü–∞–π —Å—é–¥–∏ ‚û°Ô∏è /devs")
    await message.answer(help_text)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /devs
@dp.message_handler(commands=['devs'])
async def devs_info_command(message: types.Message):

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    await message.answer_photo(
        photo=InputFile("DevsPictures/Ivan.jpg"),
        parse_mode="HTML",
        caption=(
            "–ß—É—Ä–∏–ª–æ–≤ –Ü–≤–∞–Ω –ü–ë-21 - –ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç —ñ —Ç—ñ–º–ª—ñ–¥ –ø—Ä–æ–µ–∫—Ç—É\n"
            "–†–æ–∑—Ä–æ–±–Ω–∏–∫ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó –±–æ—Ç–∞, —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É —ñ –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ –≤–∏–≥–ª—è–¥—É –ø—Ä–æ–µ–∫—Ç—É.\n\n"
            "<blockquote>Smarty - –º—ñ–π –ø–µ—Ä—à–∏–π —á–∞—Ç-–±–æ—Ç –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º—É —ñ –ø–µ—Ä—à–∏–π –∑–Ω–∞—á–Ω–∏–π –ø—Ä–æ–µ–∫—Ç –Ω–∞–ø–∏—Å–∞–Ω–∏–π –Ω–∞ –º–æ–≤—ñ python. "
            "–ù–µ –≤—Å–µ –≤–¥–∞–ª–æ—Å—è —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ç–∞–∫, —è–∫ —Ö–æ—Ç—ñ–ª–æ—Å—è, –∞–±–æ –∂ –≤–∑–∞–≥–∞–ª—ñ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏, –∞–ª–µ —è –¥—è–∫—É—é –º–æ—ó–π –∫–æ–º–∞–Ω–¥—ñ, "
            "–±–µ–∑ —Ö–ª–æ–ø—Ü—ñ–≤ –±—É–ª–æ –±–∏ —Ç—è–∂–∫–æ üòâ</blockquote>"
            "\n\n"
            "–ö–æ–Ω—Ç–∞–∫—Ç–∏ - telegram @kibermolfar"
        )
    )
    await asyncio.sleep(1)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    await message.answer_photo(
        photo=InputFile("DevsPictures/Igor.jpg"),
        parse_mode="HTML",
        caption=(
            "–ú–∞–ª—é–∫ –Ü–≥–æ—Ä –°–ü-23 - –º–æ—Ç–∏–≤–∞—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç—É —Ç–∞ –æ–¥–Ω–∏ –∑ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤\n"
            "–¢–µ–º–∏ –¥–æ —Ä–æ–∑–¥—ñ–ª—É /activities - –û—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç 1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£ + –ø–∏—Ç–∞–Ω–Ω—è –¥–æ /quiz.\n\n"
            "<blockquote>‚¨ÜÔ∏è—Ö–æ—á—É —Ç–∞–∫ —à–æ–± –º–µ–Ω–µ –∑–∞–ø–∏—Å–∞–ª–∏ –∞—Ö–∞—Ö–∞—Ö‚¨ÜÔ∏è</blockquote>"
            "\n\n"
            "–ö–æ–Ω—Ç–∞–∫—Ç–∏ - telegram @Pazuchela"
        )
    )
    await asyncio.sleep(1)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    await message.answer_photo(
        photo=InputFile("DevsPictures/Artem.jpg"),
        parse_mode="HTML",
        caption=(
            "–ö—Ä–∏–º—Å—å–∫–∏–π –ê—Ä—Ç–µ–º –°–ü-23 - —Å—Ç–∞—Ä–∞–Ω–Ω–∏–π –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫ —Ç–∞ –æ–¥–∏–Ω –∑ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤\n"
            "–¢–µ–º–∏ –¥–æ —Ä–æ–∑–¥—ñ–ª—É /activities - –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç–∞—Ö üßë‚Äçüíª + –ø–∏—Ç–∞–Ω–Ω—è –¥–æ /quiz.\n"
            "<blockquote> —Ç—É—Ç –ø–æ–∫–∏ –ø—É—Å—Ç–æ </blockquote>"
            "\n\n"
            "–ö–æ–Ω—Ç–∞–∫—Ç–∏ - telegram @artemovskiiy"
        )
    )
    await asyncio.sleep(1)
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    await message.answer_photo(
        photo=InputFile("DevsPictures/Danil.png"),
        parse_mode="HTML",
        caption=(
            "–î–∞–Ω–∏–ª–æ –ú–∞–∫–æ–≥–æ–Ω –ü–û-21 - –ø–æ—Ü—ñ–Ω–æ–≤—É–≤–∞—á —ñ–Ω–Ω–æ–≤–∞—Ü—ñ–π —É —Å–≤—ñ—Ç—ñ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è üíª. –õ—é–±–∏—Ç–µ–ª—å –µ–º–æ–¥–∂—ñüé≠, –∫–ª–∞—Å–Ω–∏—Ö —Å—Ç—ñ–∫–µ—Ä—ñ–≤üéü\n"
            "\n{‚úÖ–û–¥–∏–Ω —ñ–∑ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤üë®‚Äçüíª}\n\n"
            "–ó–∞–≤–∑—è—Ç–∏–π —É—á–∞—Å–Ω–∏–∫ /activities - –¥–µ –¥—ñ–ª–∏—Ç—å—Å—è *–ü—Ä–∏–∫–ª–∞–¥–∞–º–∏ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç —É —Å–≤—ñ—Ç—ñ* üåá + –≤–ª–∞—à—Ç–æ–≤—É—î –∑–∞—Ö–æ–ø–ª—é—é—á—ñ /quiz –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤üë•.\n\n"
            "<blockquote>üëåüòÅüëç</blockquote>"
            "\n\n"
            "–ö–æ–Ω—Ç–∞–∫—Ç–∏ - telegram @danulomakogon"
        )
    )
    await message.answer("SmartGachiClub_2023")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /gov
@dp.message_handler(commands=['gov'])
async def gov(message: types.Message):
    dia_url = "https://diia.gov.ua"
    president_url = "https://president.gov.ua"
    kabinet_url = "https://petition.kmu.gov.ua"
    kyiv_url = "https://kyivcity.gov.ua"
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–î—ñ—è", url=dia_url), InlineKeyboardButton("–û—Ñ. –ø–æ—Ä—Ç–∞–ª –ö–∏—î–≤–∞", url=kyiv_url))
    markup.add(InlineKeyboardButton("–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ñ –ø–µ—Ç–∏—Ü—ñ—ó –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç –£–∫—Ä–∞—ó–Ω–∏", url=president_url))
    markup.add(InlineKeyboardButton("–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ñ –ø–µ—Ç–∏—Ü—ñ—ó –ö–∞–±–ú—ñ–Ω", url=kabinet_url))

    await message.answer(
        "–£–∫—Ä–∞—ó–Ω–∞ üá∫üá¶ –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ —Ä–æ–±–∏—Ç—å –∫—Ä–æ–∫–∏, —â–æ–± —ó—ó –º—ñ—Å—Ç–∞ –±—É–ª–∏ '—Ä–æ–∑—É–º–Ω–∏–º–∏', –∞ –∫—Ä–∞—ó–Ω–∞ - —Å—É—á–∞—Å–Ω–æ—é üìà. "
        "–Ø–∫—â–æ —Ç–∏ —â–µ –Ω–µ —á—É–≤ –ø—Ä–æ –¥—ñ—é —Ç–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ñ –ø–µ—Ç–∏—Ü—ñ—ó - –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –∫–ª—ñ–∫–∞–π –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —ñ –∑–∞–ø–∞–º'—è—Ç–∞–π, "
        "—â–æ –¥–æ–º–µ–Ω GOV.UA –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –æ—Ä–≥–∞–Ω—ñ–≤ –¥–µ—Ä–∂–∞–≤–Ω–æ—ó –≤–ª–∞–¥–∏ –£–∫—Ä–∞—ó–Ω–∏. \n\n–ó–∞–ø—Ä–æ–≤–∞–¥–∂–µ–Ω–Ω—è –¥–µ—Ä–∂–∞–≤–Ω–∏—Ö –ø–æ—Å–ª—É–≥ "
        "–¥–ª—è –Ω–∞—Å–µ–ª–µ–Ω–Ω—è –≤ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º –µ–ª–µ–º–µ–Ω—Ç–æ–º —Ä–æ–∑—É–º–Ω–æ–≥–æ –º—ñ—Å—Ç–∞ ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è",
        reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /water
@dp.message_handler(commands=['water'])
async def water_pollution(message: types.Message):
    kyiv_water_url = "https://ecosoft.ua/ua/water-map/"
    ukraine_water_url = "https://ziko.com.ua/ru/analysis-map/"
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ö–∏—ó–≤", url=kyiv_water_url))
    markup.add(InlineKeyboardButton("–£–∫—Ä–∞—ó–Ω–∞", url=ukraine_water_url))

    await message.answer(
        "–Ø –≤–æ–ª–æ–¥—ñ—é 2-–º–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏–º–∏ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–µ—Å—É—Ä—Å–∞–º–∏, —è–∫—ñ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —è–∫—ñ—Å—Ç—å –≤–æ–¥–∏ –≤ —Ç–≤–æ—î–º—É "
        "–º—ñ—Å—Ç—ñ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ. 1 –∫–Ω–æ–ø–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —è–∫—ñ—Å—Ç—å –≤–æ–¥–∏ —É –ö–∏—î–≤—ñ, 2 - –≤ —ñ–Ω—à–∏—Ö —Ä–µ–≥—ñ–æ–Ω–∞—Ö "
        "–∫—Ä–∞—ó–Ω–∏ (–•–æ—á –±—ñ–ª—å—à—ñ—Å—Ç—å –¥–∞—Ç—á–∏–∫—ñ–≤ —ñ –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è —É –∑–∞—Ö—ñ–¥–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ "
        "–£–∫—Ä–∞—ó–Ω–∏ üá∫üá¶, —É —ñ–Ω—à–∏—Ö –º—ñ—Å—Ç–∞—Ö –≤–æ–Ω–∏ —Ç–µ–∂ —î, —Å–ø—Ä–æ–±—É–π üòâ)",
        reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /air
@dp.message_handler(commands=['air'])
async def air_pollution(message: types.Message):
    kyiv_url = "https://www.iqair.com/ukraine/kyiv/kyiv-c"
    kharkiv_url = "https://www.iqair.com/ukraine/kharkiv"
    lviv_url = "https://www.iqair.com/ukraine/lviv"
    odessa_url = "https://www.iqair.com/ukraine/odessa"
    dnipro_url = "https://www.iqair.com/ukraine/dnipro"
    vinnutsia_url = "https://www.iqair.com/ukraine/vinnyts-ka/vinnytsia"
    chernivtsi_url = "https://www.iqair.com/ukraine/chernivtsi"
    ivano_frankivsk_url = "https://www.iqair.com/ukraine/ivano-frankivsk"
    ukraine_url = "https://www.iqair.com/ukraine"
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ö–∏—ó–≤", url=kyiv_url), InlineKeyboardButton("–•–∞—Ä–∫—ñ–≤", url=kharkiv_url))
    markup.add(InlineKeyboardButton("–õ—å–≤—ñ–≤", url=lviv_url), InlineKeyboardButton("–û–¥–µ—Å—Å–∞", url=odessa_url))
    markup.add(InlineKeyboardButton("–î–Ω—ñ–ø—Ä–æ", url=dnipro_url), InlineKeyboardButton("–í—ñ–Ω–Ω–∏—Ü—è", url=vinnutsia_url))
    markup.add(InlineKeyboardButton("–ß–µ—Ä–Ω—ñ–≤—Ü—ñ", url=chernivtsi_url), InlineKeyboardButton("–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫", url=ivano_frankivsk_url))
    markup.add(InlineKeyboardButton("–ü–æ–≤—ñ—Ç—Ä—è –≤ –£–∫—Ä–∞—ó–Ω—ñ", url=ukraine_url))

    await message.answer(
        "–©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —è–∫—ñ—Å—Ç—å –ø–æ–≤—ñ—Ç—Ä—è —É —Å–≤–æ—î–º—É –º—ñ—Å—Ç—ñ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñüò∂‚Äçüå´, "
        "–æ–±–µ—Ä–∏ —Å–≤–æ—î –º—ñ—Å—Ç–æ –∑—ñ —Å–ø–∏—Å–∫—É, –∞–±–æ, —è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î –≤ —Å–ø–∏—Å–∫—É, –Ω–∏—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É '–ü–æ–≤—ñ—Ç—Ä—è –≤ –£–∫—Ä–∞—ó–Ω—ñ'üá∫üá¶",
        reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /car_chargers
@dp.message_handler(commands=['car_chargers'])
async def car_chargers_nearby(message: types.Message):
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    latitude = message.location.latitude if message.location else None
    longitude = message.location.longitude if message.location else None

    # –°–æ–∑–¥–∞–µ–º URL –¥–ª—è Google Maps —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø—Ä–æ—Å–æ–º –æ –∑–∞—Ä—è–¥–∫–∞—Ö
    google_maps_url = f"https://www.google.com/maps/search/?api=1&query=–∑–∞—Ä—è–¥–∫–∞+–¥–ª—è+–µ–ª–µ–∫—Ç—Ä–æ–º–æ–±—ñ–ª—ñ–≤"

    # –°–æ–∑–¥–∞–µ–º Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Google Maps
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–í—ñ–¥–∫—Ä–∏—Ç–∏ Google Maps", url=google_maps_url))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer("–ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —â–æ–± –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è, –¥–µ –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞–π–±–ª–∏–∂—á—ñ –∑–∞—Ä—è–¥–Ω—ñ —Å—Ç–∞–Ω—Ü—ñ—ñ –¥–ª—è —Ç–≤–æ–≥–æ –µ–ª–µ–∫—Ç—Ä–æ–º–æ–±—ñ–ª—è",
                         reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /quiz
@dp.message_handler(commands=['quiz'])
async def quiz_command(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=1)
    buttons = [
        KeyboardButton(text="–¢–µ—Å—Ç –Ω–∞ 5 –ø–∏—Ç–∞–Ω–Ω—å ü•±"),
        KeyboardButton(text="–¢–µ—Å—Ç –Ω–∞ 10 –ø–∏—Ç–Ω–∞–Ω–Ω—å üßê"),
        KeyboardButton(text="–¢–µ—Å—Ç –Ω–∞ 15 –ø–∏—Ç–∞–Ω–Ω—å üòà"),
    ]

    markup.add(*buttons)
    await message.answer("–ó–∞—Ä–∞–∑ —è –ø—Ä–æ–≤–µ–¥—É –¥–ª—è —Ç–µ–±–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è. –û–±–µ—Ä–∏, –Ω–∞ —è–∫—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∏—Ç–∞–Ω–Ω—å "
                         "—Ç–∏ –≥–æ—Ç–æ–≤–∏–π –∑–∞—Ä–∞–∑ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂—á–µ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è", reply_markup=markup)


@dp.message_handler(lambda message: message.text
                    and message.text in ["–¢–µ—Å—Ç –Ω–∞ 5 –ø–∏—Ç–∞–Ω–Ω—å ü•±",
                                         "–¢–µ—Å—Ç –Ω–∞ 10 –ø–∏—Ç–Ω–∞–Ω–Ω—å üßê",
                                         "–¢–µ—Å—Ç –Ω–∞ 15 –ø–∏—Ç–∞–Ω–Ω—å üòà"])
async def handle_button_click(message: types.Message):
    selected_button_text = message.text
    global questions_list
    if selected_button_text == "–¢–µ—Å—Ç –Ω–∞ 5 –ø–∏—Ç–∞–Ω–Ω—å ü•±":
        questions_list = questions_handler(5)
        await question_engine(message)
    elif selected_button_text == "–¢–µ—Å—Ç –Ω–∞ 10 –ø–∏—Ç–Ω–∞–Ω–Ω—å üßê":
        questions_list = questions_handler(10)
        await question_engine(message)
    elif selected_button_text == "–¢–µ—Å—Ç –Ω–∞ 15 –ø–∏—Ç–∞–Ω–Ω—å üòà":
        questions_list = questions_handler(15)
        await question_engine(message)


@dp.message_handler(lambda message: message.text in ["–í–∞—Ä—ñ–∞–Ω—Ç 1", "–í–∞—Ä—ñ–∞–Ω—Ç 2", "–í–∞—Ä—ñ–∞–Ω—Ç 3", "–í–∞—Ä—ñ–∞–Ω—Ç 4"])
async def handle_test_answer(message: types.Message):
    global answered_questions
    global right_answered_questions

    question = questions_list[answered_questions]

    answered_questions += 1

    if answered_questions < len(questions_list):
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        selected_option = message.text

        question_text, answer_1, answer_2, answer_3, answer_4, right_answer = question
        await message.answer(f"–í–∏ –æ–±—Ä–∞–ª–∏ –≤–∞—Ä—ñ–∞–Ω—Ç: {selected_option}")
        if right_answer == message.text:
            right_answered_questions += 1

        await question_engine(message)

    elif answered_questions >= len(questions_list):
        await message.answer(f"–í–∏ –æ–±—Ä–∞–ª–∏ –≤–∞—Ä—ñ–∞–Ω—Ç: {message.text}")
        question_text, answer_1, answer_2, answer_3, answer_4, right_answer = question
        if right_answer == message.text:
            right_answered_questions += 1

        await test_end_handler(message, answered_questions, right_answered_questions)

        answered_questions = 0
        right_answered_questions = 0
        reset_quiz()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /activities
@dp.message_handler(commands=['activities'])
async def activity_command(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=1)
    buttons = [
        KeyboardButton(text="–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç 1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£"),
        KeyboardButton(text="–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç–∞—Ö üßë‚Äçüíª"),
        KeyboardButton(text="–ü—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç —É —Å–≤—ñ—Ç—ñ üåÜ"),
    ]

    markup.add(*buttons)
    await message.answer("–ü—Ä–æ —â–æ —Ç–∏ —Ö–æ—á–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —Å—å–æ–≥–æ–¥–Ω—ñ?", reply_markup=markup)


@dp.message_handler(lambda message: message.text
                    and message.text in ["–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç 1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£",
                                         "–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç–∞—Ö üßë‚Äçüíª",
                                         "–ü—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç —É —Å–≤—ñ—Ç—ñ üåÜ"])
async def handle_button_click(message: types.Message):
    global prev_message
    selected_button_text = message.text

    if selected_button_text == "–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç 1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£":
        await basic_concepts_handler(message)
        prev_message = "–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç 1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£"
    elif selected_button_text == "–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç–∞—Ö üßë‚Äçüíª":
        await technologies_handler(message)
        prev_message = "–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç–∞—Ö üßë‚Äçüíª"
    elif selected_button_text == "–ü—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç —É —Å–≤—ñ—Ç—ñ üåÜ":
        await examples_handler(message)
        prev_message = "–ü—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç —É —Å–≤—ñ—Ç—ñ üåÜ"


@dp.message_handler(lambda message: message.text.isdigit()
                    or message.text == "–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè")
async def process_topic_number(message: types.Message):
    global global_topic_num
    global global_table_name

    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–º—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    topic_number = ""

    if message.text.isdigit():
        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–µ –≤ int
        topic_number = int(message.text)
        global_topic_num = topic_number
        # –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∏—Å–ª–∞ topic_number
        await message.answer(f"–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É –ø—ñ–¥ –Ω–æ–º–µ—Ä–æ–º üé≤ {topic_number} üé≤ ")

        if (prev_message == "–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç 1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£"
                and topic_number <= len(get_all_topics_from_table('basic'))
                and message.text != "–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"):
            topic_info = get_topic_by_number('basic', topic_number)
            global_table_name = 'basic'
            await send_topic_info(message, topic_info)
        elif (prev_message == "–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç–∞—Ö üßë‚Äçüíª"
              and topic_number <= len(get_all_topics_from_table('technologies'))
              and message.text != "–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"):
            topic_info = get_topic_by_number('technologies', topic_number)
            global_table_name = 'technologies'
            await send_topic_info(message, topic_info)
        elif (prev_message == "–ü—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç —É —Å–≤—ñ—Ç—ñ üåÜ"
              and topic_number <= len(get_all_topics_from_table('cities'))
              and message.text != "–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"):
            topic_info = get_topic_by_number('cities', topic_number)
            global_table_name = 'cities'
            await send_topic_info(message, topic_info)
        else:
            await message.answer("–¢–µ–º–∏ –∑ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º —É –º–æ—ó—Ö –∑–∞–ø–∏—Å–∞—Ö –Ω–µ–º–∞—îüòì. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–º–∏.")
    else:
        if (message.text == "–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"
              and prev_message == "–û—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç 1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£"):
            topic_info = get_random_topic_from_table('basic')
            global_table_name = 'basic'
            global_topic_num = topic_info[0]
            await send_topic_info(message, topic_info)
        elif (message.text == "–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"
              and prev_message == "–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç–∞—Ö üßë‚Äçüíª"):
            topic_info = get_random_topic_from_table('technologies')
            global_table_name = 'technologies'
            global_topic_num = topic_info[0]
            await send_topic_info(message, topic_info)
        elif (message.text == "–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"
              and prev_message == "–ü—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç —É —Å–≤—ñ—Ç—ñ üåÜ"):
            topic_info = get_random_topic_from_table('cities')
            global_table_name = 'cities'
            global_topic_num = topic_info[0]
            await send_topic_info(message, topic_info)
        else:
            await message.answer("–¢–µ–º–∏ –∑ —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º —É –º–æ—ó—Ö –∑–∞–ø–∏—Å–∞—Ö –Ω–µ–º–∞—îüòì. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–º–∏.")


@dp.message_handler(lambda message: message.text
                    and message.text in ["üëç –õ–∞–π–∫",
                                         "üëé –î–∏–∑–ª–∞–π–∫",
                                         "‚û°Ô∏è –î–∞–ª—ñ"])
async def h_button_click(message: types.Message):
    button = message.text

    if button == "üëç –õ–∞–π–∫":
        like(global_table_name, global_topic_num)
    elif button == "üëé –î–∏–∑–ª–∞–π–∫":
        dislike(global_table_name, global_topic_num)
    elif button == "‚û°Ô∏è –î–∞–ª—ñ":
        await message.answer("‚ÜòÔ∏è‚ÜòÔ∏è‚ÜòÔ∏è")

    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton("/activities"))
    markup.add(KeyboardButton("–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"))
    markup.add(KeyboardButton("‚ùå–ó–∞–≤–µ—Ä—à–∏—Ç–∏‚ùå"))

    await message.answer("–Ø–∫—â–æ —Ç–∏ —Ö–æ—á–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø—Ä–æ —â–µ –æ–¥–Ω—É –∑ —Ç–µ–º—É –∑ —Ü—å–æ–≥–æ —Ä–æ–∑–¥—ñ–ª—É, —Ç–æ –º–æ–∂–µ—à "
                         "–ø—Ä–æ—Å—Ç–æ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –ø–æ—Ç—Ä—ñ–±–Ω–æ—ó —Ç–µ–º–∏ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ –∫–Ω–æ–ø–∫—É –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –≤–∏–±–æ—Ä—É —Ç–µ–º–∏"
                         "üëå. \n–Ø–∫—â–æ —Ç–∏ —Ö–æ—á–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø—Ä–æ —Ç–µ–º–∏ –∑ —ñ–Ω—à–æ–≥–æ —Ä–æ–∑–¥—ñ–ª—É, —Ç–æ –æ–±–µ—Ä–∏ "
                         "—ñ–Ω—à—É —Ç–µ–º—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –ø–µ—Ä—à–æ—ó –∫–Ω–æ–ø–∫–∏ –∑ –∫–æ–º–∞–Ω–¥–æ—é /activities ‚úÖ\n"
                         "–Ø–∫—â–æ —Ç–∏ –¥—ñ–∑–Ω–∞–≤—Å—è –ø—Ä–æ –≤—Å–µ, —â–æ —Ç–µ–±–µ —Ü—ñ–∫–∞–≤–∏–ª–æ - –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ‚ùå–ó–∞–≤–µ—Ä—à–∏—Ç–∏‚ùå",
                         reply_markup=markup)


@dp.message_handler(lambda message: message.text
                    and message.text in ["‚ùå–ó–∞–≤–µ—Ä—à–∏—Ç–∏‚ùå"])
async def h_button_click(message: types.Message):
    global global_topic_num
    global global_table_name
    global prev_message
    button = message.text

    if button == "‚ùå–ó–∞–≤–µ—Ä—à–∏—Ç–∏‚ùå":
        await message.answer("–ó–∞–≤–µ—Ä—à—É—é...", reply_markup=ReplyKeyboardRemove())

        global_topic_num = 1
        global_table_name = ""
        prev_message = ""

        await message.answer("–¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É, –ø—Ä–æ —â–æ –± –≤–∏ —Ö–æ—Ç—ñ–ª–∏ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –Ω–∞—Å—Ç—É–ø–Ω–∏–º (–º–æ–∂–µ—Ç–µ "
                             "—Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –∫–æ–º–∞–Ω–¥–æ—é /help –∞–±–æ –º–µ–Ω—é)")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
