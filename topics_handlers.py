from aiogram import types
from aiogram.types import InputFile, ReplyKeyboardMarkup, KeyboardButton
from database import get_all_topics_from_table


async def send_topic_info(message, topic_info):
    if not topic_info:
        await message.answer("üîß–ø–æ–º–∏–ª–∫–∞üîß")
        return

    topic_id, title, image_url, description, likes, dislikes, table_name = topic_info

    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(
        KeyboardButton("üëç –õ–∞–π–∫"),
        KeyboardButton("üëé –î–∏–∑–ª–∞–π–∫")
    )
    markup.add(
        KeyboardButton("‚û°Ô∏è –î–∞–ª—ñ")
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º, —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await message.answer_photo(
        photo=InputFile(image_url),
        parse_mode="Markdown",
        caption=f"*{title}*\n\n{description}\n\nLikes üëç: {likes}\nDislikes üëé: {dislikes}",
        reply_markup=markup
    )


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–º —Å –Ω–æ–º–µ—Ä–∞–º–∏
def format_topics(topics):
    formatted_topics = "\n".join([f"{i+1}. {topic}" for i, topic in enumerate(topics)])
    return formatted_topics


# –û—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç
async def basic_concepts_handler(message: types.Message):
    table_name = 'basic'
    topics = get_all_topics_from_table(table_name)
    topics_text = format_topics(topics)

    # –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton("–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"))

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º reply_markup –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
    await message.answer(
        f"–û—Å—å –æ—Å–Ω–æ–≤–Ω—ñ –∫–æ–Ω—Ü–µ–ø—Ü—ñ—ó —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç, –ø—Ä–æ —è–∫—ñ —è –º–æ–∂—É —Ç–æ–±—ñ —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏ü§ó. "
        f"–î–ª—è –≤–∏–±–æ—Ä—É —Ç–µ–º–∏ –≤–≤–µ–¥–∏ —ó—ó –Ω–æ–º–µ—Ä, –∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ –æ–±–µ—Ä–∏ —Ç–µ–º—É –≤–∏–ø–∞–¥–∫–æ–≤–æüòé\n\n{topics_text}",
        reply_markup=markup
    )


# –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è —É —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç–∞—Ö
async def technologies_handler(message: types.Message):
    table_name = 'technologies'
    topics = get_all_topics_from_table(table_name)
    topics_text = format_topics(topics)

    # –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton("–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"))

    await message.answer(f"–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó - –º–æ—è —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è üëæ ü§ñ. –û–±–µ—Ä–∏ —Ç–µ–º—É –∑ –ø–µ—Ä–µ–ª—ñ–∫—É —Ç–∞ –≤–≤–µ–¥–∏ —ó—ó –Ω–æ–º–µ—Ä, –∞–±–æ "
                         f"–æ–±–µ—Ä–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—É –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º ‚ö°Ô∏è"
                         f":\n\n{topics_text}", reply_markup=markup)


# –ü—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–∑—É–º–Ω–∏—Ö –º—ñ—Å—Ç —É —Å–≤—ñ—Ç—ñ
async def examples_handler(message: types.Message):
    table_name = 'cities'
    topics = get_all_topics_from_table(table_name)
    topics_text = format_topics(topics)

    # –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton("–û–±—Ä–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—Éüëè"))

    await message.answer(f"–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó - –º–æ—è —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è üëæ ü§ñ. –û–±–µ—Ä–∏ —Ç–µ–º—É –∑ –ø–µ—Ä–µ–ª—ñ–∫—É —Ç–∞ –≤–≤–µ–¥–∏ —ó—ó –Ω–æ–º–µ—Ä, –∞–±–æ "
                         f"–æ–±–µ—Ä–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É —Ç–µ–º—É –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—ñ–¥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º ‚ö°Ô∏è"
                         f":\n\n{topics_text}", reply_markup=markup)
